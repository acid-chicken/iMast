# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#
require "xcodeproj"

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"

  lane :nightly do
    ensure_git_status_clean
    increment_build_number(xcodeproj: "iMast.xcodeproj")

    old_tag = sh("git", "rev-list", "--tags", "--max-count", "1").strip[0,7]
    logs = sh("git", "log", '--pretty=format:- %s (%h)', old_tag + "...HEAD").split("\n").select { |line| !line.start_with? "- Merge branch 'master'" }.join("\n")
    version = get_version_number(xcodeproj: "iMast.xcodeproj", target: "iMast iOS") + "b" + get_build_number(xcodeproj: "iMast.xcodeproj")

    changelog = "This is nightly build.\n\ncommits:\n" + logs + "\n\nGitHub: https://github.com/cinderella-project/iMast/compare/" + old_tag + "..." + version
    changelog = changelog.gsub("→", "->")

    git_commit(path: ["./*/Info.plist", "./iMast.xcodeproj/project.pbxproj"], message: ":rocket: " + version)
    # push_to_git_remote(tags: false)
    add_git_tag(tag: version, message: changelog)

#    get_provisioning_profile

#    project = Xcodeproj::Project.open("../iMast.xcodeproj")
#    bundle_id = "jp.pronama.imast"
    
#    target = project.targets.find { |target| target.build_settings("Release")["PRODUCT_BUNDLE_IDENTIFIER"] == bundle_id}
#    appexs = target.dependencies.select { |dep| dep.target.product_type == "com.apple.product-type.app-extension" }
#    
#    for appex in appexs do
#       get_provisioning_profile(app_identifier: appex.target.build_settings("Release")["PRODUCT_BUNDLE_IDENTIFIER"])
#    end

    build_app(workspace: "iMast.xcworkspace", scheme: "iMast iOS", xcargs: "")
    upload_to_testflight(changelog: changelog, distribute_external: true, wait_processing_interval: 90, groups: ["外部テスター"], wait_for_uploaded_build: true)
    push_to_git_remote
  end
end
